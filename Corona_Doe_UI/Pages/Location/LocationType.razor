@page "/locationtype/entry/{LocationTypeId:int}"

<h4 class="header">Location Type form</h4>

@if (locationtype == null)
{
    <p><em>Loading...</em></p>
}
else
{
<EditForm Model="@locationtype" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <div class="form-group">
        <label for="myanname">Myanmar name</label>
        <InputText class="form-control" id="name_mm" @bind-Value="locationtype.name_mm" />
    </div>

    <div class="form-group">
        <label for="engname">English name</label>
        <InputText class="form-control" id="name_en" @bind-Value="locationtype.name_en" />
    </div>

    <div class="row my-row">
        <div class="action-button ml-auto">
            <a href="locationtype/list"> Cancel </a>

            @if (locationtype.locationtype_id > 0)
            {
                <button type="button" class="btn btn-danger" @onclick="HandleDelete">Delete</button>
            }

            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>


</EditForm>
}

<MessageModal @ref="modal" />

@code {

    [Parameter]
    public int LocationTypeId { get; set; }

    en.location_type locationtype;
    private string msg;
    private MessageModal modal;

    protected override async Task OnInitializedAsync()
    {
        if (LocationTypeId > 0)
            locationtype = await da.location_type.Get(LocationTypeId);

        locationtype ??= new en.location_type();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            es.ActionResult result;

            if (locationtype.locationtype_id > 0)
                result = await da.location_type.Update(locationtype);
            else
                result = await da.location_type.Insert(locationtype);

            if (result.Status != es.Status.Success)
            {
                modal.Show("Message", result.Msg);
                return;
            }

            NavigationManager.NavigateTo("locationtype/list");
        }
        catch (Exception ex)
        {
            modal.Show("Message", ex.Message);
        }
    }

    private async Task HandleDelete()
    {
        bool confirm = await modal.Show("Message", "Are you sure want to delete ?", "Yes", "No");
        if (!confirm)
            return;

        try
        {
            await da.location_type.Delete(LocationTypeId);

            NavigationManager.NavigateTo("locationtype/list");
        }
        catch (Exception ex)
        {
            modal.Show("Message", ex.Message);
        }
    }

}
