@page "/quarantinerecord/entry/{QuarantineId:int}"

<h4 class="header">Quarantine Record Form</h4>

@if (quarantineRecord != null)
{
    <EditForm Model="@quarantineRecord" OnValidSubmit="HandleValidSubmit" autocomplete="off">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label>Name*</label>
                    <InputText id="q-person-name" class="full form-control" placeholder="Name" @bind-Value="quarantineRecord.person_name" />
                </div>

                <div class="form-group">
                    <label>Phone Number*</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.person_ph" placeholder="Phone Number" />
                </div>

                <div class="form-group">
                    <div class="custom-control custom-checkbox pb-2">
                        <input class="custom-control-input" type="checkbox" id="nrc" value="@isNRCchk" @bind="@isNRCchk" @oninput="OnChangeNRC">
                        <label class="custom-control-label" for="nrc">NRC</label>
                    </div>
                    @*<InputText class="full form-control" @bind-Value="quarantineRecord.person_nrc" placeholder="NRC" disabled="@(!(isNRCchk))" />*@
                    <div class="row my-row">
                        <div class="col-2 pad-zero">
                            @if (stateNumberList != null && stateNumberList?.Count() > 0)
                            {
                                <select @bind="selectedStateNumber" class="form-control pad-zero" disabled="@(!(isNRCchk))">
                                    @foreach (var nrcno in stateNumberList)
                                    {
                                        <option value="@nrcno">@nrcno</option>
                                    }
                                </select>
                            }
                        </div>

                        <div class="col-4 pad-right-0 pad-left-3">
                            @if (districtList != null && districtList?.Count() > 0)
                            {
                                <select @bind="@selectedDistrict" class="form-control pad-zero" disabled="@(!(isNRCchk))">
                                    @foreach (var card in districtList)
                                    {
                                        <option value="@card">@card</option>
                                    }
                                </select>
                            }
                        </div>

                        <div class="col-2 pad-right-0 pad-left-3">
                            @if (naList != null && naList?.Count() > 0)
                            {
                                <select @bind="@selectedNa" class="form-control pad-zero" disabled="@(!(isNRCchk))">
                                    @foreach (var nc in naList)
                                    {
                                        <option value="@nc">@nc</option>
                                    }
                                </select>
                            }
                        </div>

                        <div class="col-4 pad-left-3 pad-zero">
                            <input type="text" pattern="\d*" class="form-control pad-5" id="regno" minlength="6" maxlength="6" placeholder="000000" @bind="nrcRegisterNo" autocomplete="off" disabled="@(!(isNRCchk))" />
                        </div>

                        @if (!string.IsNullOrWhiteSpace(customWarning))
                        {
                            <label for="errconfirmPwd" style="color: red;">@customWarning</label>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <label>Age</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.person_age" placeholder="Age" />
                </div>

                <div class="form-group">
                    <label>Date of Birth</label>
                    <input type="datetime-local" @bind="quarantineRecord.person_dob" @bind:format="@va.datetimeformat" class="full form-control" />
                </div>

                <div class="form-group">
                    <label>Station</label>
                    @if (stationList != null && stationList?.Count() > 0)
                    {
                        <Typeahead SearchMethod="GetQuaStation"
                                   Placeholder="Search..."
                                   Items="stationList"
                                   @bind-Value="selectedQuaStation">
                            <SelectedTemplate Context="station">
                                @station.name_en
                            </SelectedTemplate>
                            <ResultTemplate Context="station">
                                @station.name_en
                            </ResultTemplate>
                        </Typeahead>
                    }
                </div>

                <div class="form-group">
                    <label>Start Date</label>
                    <input type="datetime-local" @bind="quarantineRecord.start_date" @bind:format="@va.datetimeformat" class="full form-control" />
                </div>

                <div class="form-group">
                    <label>End Date</label>
                    <input type="datetime-local" @bind="quarantineRecord.end_date" @bind:format="@va.datetimeformat" class="full form-control" />
                </div>

                <div class="form-group">
                    <label>Home Town</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.hometown" placeholder="Home Town" />
                </div>

                <div class="form-group">
                    <label>Gender</label>
                    @*<div>
                            <input type="radio" name="radio-group" id="radio1" @onclick="@(()=>IsCheck(en.Gender.Male))" checked="@isMaleCheck" />
                            <label for="radio1" class="text-color">Male</label>
                            <input type="radio" name="radio-group" id="radio2" @onclick="@(()=>IsCheck(en.Gender.Female))" checked="@isFemaleCheck" />
                            <label for="radio2" class="text-color">Female</label>
                        </div>*@
                    <div>
                        <div class="custom-control custom-radio custom-control-inline pl-0">
                            <input type="radio" class="custom-control-input" name="radio-group" id="radio1" @onclick="@(()=>IsCheck(en.Gender.Male))" checked="@(quarantineRecord.gender?.Equals(en.Gender.Male))">
                            <label class="custom-control-label" for="radio1">Male</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline pl-0">
                            <input type="radio" class="custom-control-input" name="radio-group" id="radio2" @onclick="@(()=>IsCheck(en.Gender.Female))" checked="@(quarantineRecord.gender?.Equals(en.Gender.Female))">
                            <label class="custom-control-label" for="radio2">Female</label>
                        </div>
                    </div>

                </div>

                @*<div class="form-group">
                        <div class="mycheck form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="labtesting" value="@quarantineRecord.lab_testing" @bind="quarantineRecord.lab_testing" @oninput="OnChangeLabTesting">
                            <label class="form-check-label" for="labtesting">Lab Testing</label>
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <input class="custom-control-input" type="checkbox" id="labtesting" value="@quarantineRecord.lab_testing" @bind="@quarantineRecord.lab_testing" @oninput="OnChangeLabTesting">
                        <label class="custom-control-label" for="labtesting">Lab Testing</label>
                    </div>
                </div>

                @if (quarantineRecord.lab_testing == true)
                {
                    <div class="form-group">
                        <label>Lab Testing Date</label>
                        <input type="datetime-local" @bind="quarantineRecord.lab_testing_date" @bind:format="@va.datetimeformat" class="full form-control" />
                    </div>
                }

            </div>

            <div class="col-sm-6">
                <div class="form-group">
                    <label>Reason</label>

                    @if (reasonList != null && reasonList?.Count() > 0)
                    {
                        <Typeahead SearchMethod="GetReason"
                                   Placeholder="Search..."
                                   Items="reasonList"
                                   @bind-Value="selectedReason">
                            <SelectedTemplate Context="station">
                                @station.name_en
                            </SelectedTemplate>
                            <ResultTemplate Context="station">
                                @station.name_en
                            </ResultTemplate>
                        </Typeahead>
                    }
                </div>

                <div class="form-group">
                    <label>Travel History</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.travel_history" placeholder="Travel History" />
                </div>

                <div class="form-group">
                    <label>Residence Address</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.residence_address" placeholder="Residence Address" />
                </div>

                <div class="form-group">
                    <label>Current Address</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.current_address" placeholder="Current Address" />
                </div>

                <div class="form-group">
                    <label>Traveled From</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.traveled_from" placeholder="Traveled From" />
                </div>

                <div class="form-group">
                    <label>Fever History</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.fever_history" placeholder="Fever History" />
                </div>

                <div class="form-group">
                    <label>Remark</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.remark" placeholder="Remark" />
                </div>

                <div class="form-group">
                    <label>Result</label>
                    <InputText class="full form-control" @bind-Value="quarantineRecord.result" placeholder="Result" />
                </div>

                <div class="form-group">
                    <label>Result Date</label>
                    <input type="datetime-local" @bind="quarantineRecord.result_date" @bind:format="@va.datetimeformat" class="full form-control" />
                </div>

                @*<div class="form-group">
                        <div class="mycheck form-check form-check-inline">
                            <input class="form-check-input" type="checkbox" id="checkedout" value="@quarantineRecord.checkedout" @bind="quarantineRecord.checkedout" @oninput="OnChangeCheckOut">
                            <label class="form-check-label" for="checkedout">Checked Out</label>
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <input class="custom-control-input" type="checkbox" id="checkedout" value="@quarantineRecord.checkedout" @bind="@quarantineRecord.checkedout" @oninput="OnChangeCheckOut">
                        <label class="custom-control-label" for="checkedout">Checked Out</label>
                    </div>
                </div>

                @if (quarantineRecord.checkedout == true)
                {
                    <div class="form-group">
                        <label>Check Out Date</label>
                        <input type="datetime-local" @bind="quarantineRecord.checkout_date" @bind:format="@va.datetimeformat" class="full form-control" />
                    </div>
                }

            </div>
        </div>

        <div class="row my-row">
            <div class="action-button">
                <button type="submit" class="btn btn-info"><span>Save</span></button>

                @if (quarantineRecord.quarantine_id > 0)
                {
                    <button type="button" class="btn btn-danger" @onclick="HandleDelete"><span>Delete</span></button>
                }

                <a href="quaratinerecord/list"> Cancel </a>
            </div>
        </div>


    </EditForm>
}

<MessageModal @ref="modal" />

@code {

    [Parameter]
    public int QuarantineId { get; set; }

    private MessageModal modal;
    private en.quarantine_record quarantineRecord;
    private List<en.entry_reason> reasonList;
    private List<en.quarantine_station> stationList;

    private en.entry_reason selectedReason { get; set; }
    private en.quarantine_station selectedQuaStation { get; set; }

    private bool isNRCchk;
    private string nrcRegisterNo, customWarning;
    private string selectedNa { get; set; }
    private string selectedDistrict { get; set; }
    private string selectedStateNumber { get; set; }

    private IEnumerable<string> naList;
    private IEnumerable<string> districtList;
    private IEnumerable<string> stateNumberList;

    protected override void OnInitialized()
    {
        va.IsLoading = true;

        reasonList = new List<en.entry_reason>();
        stationList = new List<en.quarantine_station>();
        quarantineRecord = new en.quarantine_record();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetData();
            StateHasChanged();
        }
    }

    #region Functions

    private async Task GetData()    // get data from server
    {
        try
        {
            var stations = await da.quarantine_station.Get();
            if (stations != null)
            {
                stationList.Clear();
                stationList.AddRange(stations);
            }

            var reasons = await da.entry_reason.Get();
            if (reasons != null)
            {
                reasonList.Clear();
                reasonList.AddRange(reasons);
            }

            naList = fn.NRCNaing();
            districtList = fn.NRCDistricts();
            stateNumberList = fn.NRCStateNumbers();

            if (QuarantineId > 0)
            {
                quarantineRecord = await da.quarantine_record.Get(QuarantineId);
                selectedQuaStation = stationList.Find(station => station.station_id == quarantineRecord?.station_id);
                selectedReason = reasonList.Find(reason => reason.reason_id == quarantineRecord.reason_id);

                if (!string.IsNullOrWhiteSpace(quarantineRecord.person_nrc))
                {
                    var data = fn.SplitNrc(quarantineRecord.person_nrc);
                    if (data.Length == 4)
                    {
                        selectedStateNumber = data[0] + '/';
                        selectedDistrict = data[1];
                        selectedNa = '(' + data[2] + ')';
                        nrcRegisterNo = data[3];
                        isNRCchk = true;
                    }
                }
            }
            else
            {
                ResetData();
            }

            va.IsLoading = false;
        }
        catch (Exception ex)
        {
            va.IsLoading = false;
            modal.Show("Message", ex.Message);
        }
    }

    private void ResetData()
    {
        quarantineRecord = new en.quarantine_record();
        selectedQuaStation = null;
        selectedReason = null;

        selectedStateNumber = "";
        selectedDistrict = "";
        selectedNa = "";
        nrcRegisterNo = "";
        isNRCchk = false;
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            if (!NRCValidation()) return;
            quarantineRecord.station_id = selectedQuaStation?.station_id;
            quarantineRecord.reason_id = selectedReason?.reason_id;
            quarantineRecord.person_nrc = selectedStateNumber + selectedDistrict + selectedNa + nrcRegisterNo;

            es.ActionResult result;

            if (quarantineRecord.quarantine_id > 0)
                result = await da.quarantine_record.Update(quarantineRecord);
            else
                result = await da.quarantine_record.Insert(quarantineRecord);

            if (result.Status != es.Status.Success)
            {
                modal.Show("Message", result.Msg);
                return;
            }
            //quarantineRecord = new en.quarantine_record();
            //selectedQuaStation = null;
            //selectedReason = null;
            NavigationManager.NavigateTo("quarantinerecord/entry/0");
            ResetData();
            await JsService.Toast("toastsave", "Save Success");
            StateHasChanged();
            await JsService.Focus("q-person-name");
        }
        catch (Exception ex)
        {
            modal.Show("Message", ex.Message);
        }
    }

    private async Task HandleDelete()
    {
        bool confirm = await modal.Show("Message", "Are you sure want to delete ?", "Yes", "No");
        if (!confirm)
            return;

        try
        {
            await da.quarantine_record.Delete(QuarantineId);

            NavigationManager.NavigateTo("quaratinerecord/list");
        }
        catch (Exception ex)
        {
            modal.Show("Message", ex.Message);
        }
    }

    private void IsCheck(string gender)
    {
        quarantineRecord.gender = gender;
    }

    private async Task<IEnumerable<en.quarantine_station>> GetQuaStation(string searchText)
    {
        var text = searchText?.ToLower();
        //return await Task.FromResult(stationList.FindAll(s => s.NE.ToLower().Contains(text)).OrderBy(o => o.NE));
        return await Task.FromResult(stationList.FindAll(station => station.name_en.ToLower().Contains(text)).OrderBy(o => o.name_en));
    }

    private async Task<IEnumerable<en.entry_reason>> GetReason(string searchText)
    {
        var text = searchText?.ToLower();
        return await Task.FromResult(reasonList.FindAll(reason => reason.name_en.ToLower().Contains(text)).OrderBy(o => o.name_en));
    }

    private void OnChangeLabTesting()
    {
        if (!(bool)quarantineRecord.lab_testing)
        {
            quarantineRecord.lab_testing_date = null;
        }
    }

    private void OnChangeCheckOut()
    {
        if (quarantineRecord.checkedout == null) return;
        if (!(bool)quarantineRecord.checkedout)
        {
            quarantineRecord.checkout_date = null;
        }
    }
    private void OnChangeNRC()
    {
        if (isNRCchk)
        {
            selectedStateNumber = null;
            selectedDistrict = null;
            selectedNa = null;
            nrcRegisterNo = null;
            customWarning = null;
        }
    }
    #endregion

    #region Validation
   private bool NRCValidation()
    {
        bool result = false;
        if (isNRCchk)
        {
            if (string.IsNullOrEmpty(selectedDistrict) & string.IsNullOrEmpty(selectedNa) & string.IsNullOrEmpty(selectedStateNumber) & string.IsNullOrEmpty(nrcRegisterNo))
            {
                customWarning = "Please select NRC.";
                result = false;
            }
            else
            {
                customWarning = null;
                result = true;
            }
        }
        else
        {
            customWarning = null;
            result = true;
        }
        return result;
    }
    #endregion
}
