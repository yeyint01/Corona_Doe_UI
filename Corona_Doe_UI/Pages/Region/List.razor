@page "/region/list"

@inject NavigationManager navMgr

<h3 class="header">Regions</h3>

@if (regions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="float-right mb-2">
        <button class="btn btn-info"
                @onclick="@(() => navMgr.NavigateTo("region/entry/0"))">
            + Add new
        </button>
    </div>

    <CustomGrid Entity="en.region" PagerSize="@(va.IsMobile ? 3 : 5)" PagesCount="5" IsPagingNone="@isCustomPagingNone" TableLayout="table-layout"
                ItemList="@regions" GridRowClick="HandleRowClick" PagerClick="PagerClick" RowsCount="5" TablePaging="@(va.IsMobile? "true": "false")">
        <GridHeader>
            <th>Myanmar name</th>
            <th>English name</th>
        </GridHeader>
        <GridRow>
            <td class="w-75-pixel">
                <span>@context.name_mm</span>
            </td>
            <td>
                <span>@context.name_en</span>
            </td>
        </GridRow>
    </CustomGrid>
}

@code {
    private IEnumerable<en.region> regions;

    private bool isCustomPagingNone;

    protected override async Task OnInitializedAsync()
    {
        regions = await da.region.Get();
    }

    private Task HandleRowClick(en.region obj)
    {
        navMgr.NavigateTo("region/entry/" + obj.region_id);

        return Task.FromResult<object>(null);
    }

    private async Task PagerClick(int curpage)      // paging clicked event
    {

    }
}
