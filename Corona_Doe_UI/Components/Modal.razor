@if (show)
{
    <div class="modal fade show" style="display:block" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@Title</h5>
                    <button type="button" class="close" @onclick="ForceClose" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @ModalBody
                </div>
                <div class="modal-footer">
                    @ModalFooter
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment ModalBody { get; set; }

    [Parameter]
    public RenderFragment ModalFooter { get; set; }

    [Parameter]
    public EventCallback<bool> OnModalClose { get; set; }

    bool show;

    public Task Open()
    {
        show = true;

        return Task.FromResult(0);
    }

    public async Task Close()
    {
        show = false;

        if (OnModalClose.HasDelegate)
            await OnModalClose.InvokeAsync(false);
    }

    private async Task ForceClose()
    {
        show = false;

        if (OnModalClose.HasDelegate)
            await OnModalClose.InvokeAsync(true);
    }
}
