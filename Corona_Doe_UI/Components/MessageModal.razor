<Modal Title="@title" @ref="modal" OnModalClose="HandleModalClose">
    <ModalBody>
        @message
    </ModalBody>
    <ModalFooter>
        <button class="btn btn-info" @onclick="HandlPostiveClick"><span>@btn1</span></button>

        @if (btn2 != null)
        {
            <button class="btn btn-dark" @onclick="HandlNegativeClick"><span>@btn2</span></button>
        }
    </ModalFooter>
</Modal>

@code {
    private string message;
    private Modal modal;
    private TaskCompletionSource<bool> tcs;
    private string title, btn1, btn2;

    public void Show(string title, string message)
    {
        this.title = title;
        this.message = message;
        btn1 = "Close";
        btn2 = null;

        modal.Open();

        // to affect changes on this.title and this.message
        StateHasChanged();
    }

    public Task<bool> Show(string title, string message, string postive, string negative)
    {
        tcs = new TaskCompletionSource<bool>();

        this.title = title;
        this.message = message;
        btn1 = postive;
        btn2 = negative;

        modal.Open();

        // to affect changes on this.title and this.message
        StateHasChanged();

        return tcs.Task;
    }

    private async Task HandlPostiveClick()
    {
        await modal.Close();

        tcs?.TrySetResult(true);
    }

    private async Task HandlNegativeClick()
    {
        await modal.Close();

        tcs?.TrySetResult(false);
    }

    private Task HandleModalClose(bool forceClose)
    {
        if (forceClose)
            tcs?.TrySetResult(false);

        return Task.FromResult(0);
    }
}
